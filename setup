#!/bin/sh
set -e
SOURCE="${BASH_SOURCE[0]}"
# resolve $SOURCE until the file is no longer a symlink
while [ -h "$SOURCE" ]; do
  BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  [[ $SOURCE != /* ]] && SOURCE="$BASE_DIR/$SOURCE"
done
BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
API_DIR=$BASE_DIR/eddie-api
CLIENT_DIR=$BASE_DIR/eddie-client

echo "Checking system for required global packages"
command -v postgres >/dev/null 2>&1 ||
	{ echo >&2 "Please install postgres then restart this script. If you don't have a preferred method,\nbrew install postgresql"; exit 1; }
command -v ruby >/dev/null 2>&1 ||
	{ echo >&2 "Please install ruby then restart this script. If you don't have a preferred method,\nbrew install ruby"; exit 1; }
command -v bundle >/dev/null 2>&1 ||
	{ echo >&2 "Please install bundler then restart this script. If you don't have a preferred method,\ngem install bundler"; exit 1; }
command -v foreman >/dev/null 2>&1 ||
	{ echo >&2 "Please install foreman then restart this script. If you don't have a preferred method,\ngem install foreman"; exit 1; }
command -v node >/dev/null 2>&1 ||
	{ echo >&2 "Please install node then restart this script. If you don't have a preferred method,\nbrew install node"; exit 1; }
command -v yarn >/dev/null 2>&1 ||
	{ echo >&2 "Please install yarn then restart this script. If you don't have a preferred method,\nbrew install yarn"; exit 1; }

cd $CLIENT_DIR
echo "Installing front-end dependencies"
yarn install

cd $API_DIR
echo "Installing back-end dependencies"
bundle check || bundle install

echo "Setting up the database"
psql -U postgres -tc "SELECT count(*) FROM pg_database WHERE datname IN ('eddie_api_development', 'eddie_api_test')" | grep -q 2 ||
rake db:setup
rake db:migrate RAILS_ENV=development
